{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52],"program":"/Users/j/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","dtoa","/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e357187f504faf9e","-C","extra-filename=-e357187f504faf9e","--out-dir","/Users/j/Desktop/Code/clock/target/rls/debug/deps","-L","dependency=/Users/j/Desktop/Code/clock/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/j/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,106,47,68,101,115,107,116,111,112,47,67,111,100,101,47,99,108,111,99,107,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,100,116,111,97,45,101,51,53,55,49,56,55,102,53,48,52,102,97,102,57,101,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"dtoa","disambiguator":[13868772093506820223,16775259758451498353]},"crate_root":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src","external_crates":[{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16127014926937644840,10617917418627549874]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16744842085366098991,10021575423373849340]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12219308825194572396,1593244597194478439]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7720465312014950334,11982745657479504049]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11777904974825780541,8937117351976831060]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15945735692096346127,1348883009948969371]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10033866232596031485,2828804971217722296]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[3105781163621059830,14714552640967562592]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16569648819360698606,17003220646964807291]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[2023344073335283670,3652609272169039894]}}],"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":338,"byte_end":6700,"line_start":9,"line_end":190,"column_start":1,"column_end":3}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":338,"byte_end":6700,"line_start":9,"line_end":190,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/dtoa-0.4.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"decl_id":null,"docs":" This crate provides fast functions for printing floating-point primitives to\n an [`io::Write`]. The implementation is a straightforward Rust port of [Milo\n Yip]'s C++ implementation [dtoa.h]. The original C++ code of each function\n is included in comments.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1743,"byte_end":1748,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"fn <W, V> (wr: W, value: V) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write float to an `io::Write`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1726,"byte_end":1735,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1918,"byte_end":1926,"line_start":63,"line_end":63,"column_start":11,"column_end":19},"name":"Floating","qualname":"::Floating","value":"Floating","parent":null,"children":[{"krate":0,"index":48}],"decl_id":null,"docs":" An floating point number that can be formatted by `dtoa::write`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1936,"byte_end":1941,"line_start":64,"line_end":64,"column_start":8,"column_end":13},"name":"write","qualname":"::Floating::write","value":"fn <W> (self, W) -> io::Result<usize>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":7967,"byte_end":7972,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":8074,"byte_end":8079,"line_start":45,"line_end":45,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":8371,"byte_end":8376,"line_start":57,"line_end":57,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":7967,"byte_end":7972,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":8074,"byte_end":8079,"line_start":45,"line_end":45,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1798}},{"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,116,111,97,45,48,46,52,46,52,47,115,114,99,47,100,105,121,102,112,46,114,115],"byte_start":8371,"byte_end":8376,"line_start":57,"line_end":57,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1798}}]}