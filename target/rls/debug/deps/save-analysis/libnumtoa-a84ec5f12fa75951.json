{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48],"program":"/Users/j/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","numtoa","/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=a84ec5f12fa75951","-C","extra-filename=-a84ec5f12fa75951","--out-dir","/Users/j/Desktop/Code/clock/target/rls/debug/deps","-L","dependency=/Users/j/Desktop/Code/clock/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/j/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,106,47,68,101,115,107,116,111,112,47,67,111,100,101,47,99,108,111,99,107,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,110,117,109,116,111,97,45,97,56,52,101,99,53,102,49,50,102,97,55,53,57,53,49,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"numtoa","disambiguator":[5265194583914260952,3560903879992702924]},"crate_root":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src","external_crates":[{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16744842085366098991,10021575423373849340]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12219308825194572396,1593244597194478439]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7720465312014950334,11982745657479504049]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[16127014926937644840,10617917418627549874]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11777904974825780541,8937117351976831060]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15945735692096346127,1348883009948969371]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10033866232596031485,2828804971217722296]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[3105781163621059830,14714552640967562592]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16569648819360698606,17003220646964807291]}},{"file_name":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[2023344073335283670,3652609272169039894]}}],"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/j/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":30},{"krate":0,"index":36}],"decl_id":null,"docs":" The standard library provides a convenient method of converting numbers into strings, but these strings are\n heap-allocated. If you have an application which needs to convert large volumes of numbers into strings, but don't\n want to pay the price of heap allocation, this crate provides an efficient `no_std`-compatible method of heaplessly converting numbers\n into their string representations, storing the representation within a reusable byte array.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3076,"byte_end":3086,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3305,"byte_end":3311,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"NumToA","qualname":"::NumToA","value":"NumToA<T>","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" Converts a number into a string representation, storing the conversion into a mutable byte slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4328,"byte_end":4334,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"numtoa","qualname":"::NumToA::numtoa","value":"fn (self, base: T, string: &mut [u8]) -> usize","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Given a base for encoding and a mutable byte slice, write the number into the byte slice and return the\n indice where the inner string begins. The inner string can be extracted by slicing the byte slice from\n that indice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4502,"byte_end":4512,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"numtoa_str","qualname":"::NumToA::numtoa_str","value":"fn (self, base: T, buf: &mut [u8; 20]) -> &str","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Convenience method for quickly getting a string from the input's array buffer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":[47,85,115,101,114,115,47,106,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,116,111,97,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4384,"byte_end":4407,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}